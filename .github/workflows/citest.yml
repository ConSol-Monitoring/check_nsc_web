name: Builds
on:
  push:
  pull_request:

# set go version for all steps
env:
  GOVERSION: 1.22.x

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GOVERSION }}
    - run: make clean
    - run: make citest
    - run: make
    - name: extract built binary
      uses: actions/upload-artifact@v4
      with:
        name: check_nsc_web-go${{ matrix.go-version }}
        path: check_nsc_web
    - run: make clean

  integration:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GOVERSION }}
    - run: |
          echo "Testing with ${{ env.GOVERSION }}"
          go work init
          go work use .
          $Env:GOWORK = "off"
          go mod vendor
          $Env:GOWORK = ""

          # build check_nsc_web
          go build -o ./check_nsc_web.exe cmd/check_nsc_web/main.go

          # install nscp
          Invoke-WebRequest -UseBasicParsing -Uri https://github.com/mickem/nscp/releases/download/0.5.2.35/NSCP-0.5.2.35-x64.msi -OutFile NSCP-0.5.2.35-x64.msi
          Start-Process msiexec -Wait -ArgumentList '/i NSCP-0.5.2.35-x64.msi /qn CONF_WEB=1 NSCLIENT_PWD=test'

          # activate version check
          & 'C:\Program Files\NSClient++\nscp.exe' settings --activate-module CheckNSCP

          # make sure it is started
          net stop nscp
          net start nscp

          # check if connection works
          .\check_nsc_web.exe -k -p test -u https://127.0.0.1:8443                    ; if ($LASTEXITCODE -ne 0) { exit 1 }
          .\check_nsc_web.exe -k -p test -u https://127.0.0.1:8443 check_nscp_version ; if ($LASTEXITCODE -ne 0) { exit 1 }
